name: Scheduled Job
on:
  schedule:
    - cron: '0 0 */7 * *'  # Run every 7 days
  workflow_dispatch:        # Manual triggering

jobs:
  run_main_script:
    runs-on: ubuntu-latest
    timeout-minutes: 30    # Add timeout limit
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4

    - name: Decode Secrets to Files
      run: |
        echo "${{ secrets.google_api_key }}" | base64 --decode > google_api_key
        echo "${{ secrets.page_id }}" | base64 --decode > page_id
        echo "${{ secrets.Notion_token }}" | base64 --decode > Notion_token
        echo "${{ secrets.Database_id }}" | base64 --decode > Database_id

    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "requirements.txt not found. Skipping dependency installation."
        fi

    - name: Run main.py
      env:
        GOOGLE_APPLICATION_CREDENTIALS: credentials.json
        google_api_key: $(cat google_api_key)
        page_id: $(cat page_id)
        Notion_token: $(cat Notion_token)
        Database_id: $(cat Database_id)
      run: |
        for i in 1 2 3; do
          if python -m scripts.main; then
            exit 0
          fi
          echo "Attempt $i failed. Retrying..."
          sleep 5
        done
        echo "Script failed after 3 attempts."
        exit 1

    - name: Encode token.json and update secret
      if: success()
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
        REPO_NAME: ${{ github.repository }}
      run: |
        if [ -f "token.json" ]; then
          TOKEN_JSON_BASE64=$(base64 -w 0 token.json)
          curl -X PUT -H "Authorization: token $GH_PAT" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/$REPO_NAME/actions/secrets/TOKEN_JSON \
               -d "{\"encrypted_value\":\"$TOKEN_JSON_BASE64\"}"
        fi

    - name: Clean up sensitive files
      if: always()
      run: |
        rm -f credentials.json token.json google_api_key Notion_token Database_id page_id

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: debug-logs
        path: |
          *.log
          error.txt
